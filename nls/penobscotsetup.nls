to setup-penobscot-migration
  setup-alewives
  setup-stripedbass
  set Hg-threshold 150 ; ng/kg (National Oceanic and Atmospheric Administration (NOAA), 1990) Adjust based on NOAA data
  set MeHg-threshold 15 ; ng/kg Adjust based on NOAA data
  set month-list ["April" "May" "June" "July" "August" "September" "October"]
  set current-hour 0
  ;set day 150
  ;set current-hour 695
  let header first velocity-data
  set total-hours (length header - 4)   ;; columns after px, py
  ;draw-mehg-legend
  reset-ticks
end

to initialize-velocity-extremes-from-series
  ;; Only consider water patches with valid velocity series
  let valid-water-patches patches with [
    patch-terrain = "water" and
    is-list? velocity-series and
    length velocity-series > 0 
  ]

  let all-mins []
  let all-maxs []

  ;; Collect patch-level minima and maxima
  foreach sort valid-water-patches [
    p ->
    let vs [velocity-series] of p
    ;; remove "NA" entries if any
    let clean-vs filter [v -> (is-number? v)] vs
    if length clean-vs > 0 [
      set all-mins lput min clean-vs all-mins
      set all-maxs lput max clean-vs all-maxs
    ]
  ]

  ;; Combine and filter outliers
  let combined-values sentence all-mins all-maxs
  if length combined-values > 0 [
    let q1 my-quantile combined-values 0.25
    let q3 my-quantile combined-values 0.75
    let iqr q3 - q1
    let lower-bound q1 - (1.5 * iqr)
    let upper-bound q3 + (1.5 * iqr)
    set combined-values filter [v -> v >= lower-bound and v <= upper-bound] combined-values

    ;; Recalculate min/max from filtered data
    let seaward-values filter [v -> v < 0] combined-values
    let landward-values filter [v -> v > 0] combined-values

    ifelse length seaward-values > 0 [
      set max-seaward-velocity min seaward-values
    ][
      set max-seaward-velocity -0.001
    ]

    ifelse length landward-values > 0 [
      set max-landward-velocity max landward-values
    ][
      set max-landward-velocity 0.001
    ]

    show (word "System-wide Seaward V-max (most negative): " max-seaward-velocity)
    show (word "System-wide Landward V-min (most positive): " max-landward-velocity)
  ]
end


to update-patch-data
  ask patches with [patch-terrain = "water"] [
    ifelse current-hour < total-hours - 1 [
      set velocity item current-hour velocity-series
      set depth item current-hour depth-series
      set salinity item current-hour salinity-series
      set temperature item current-hour temp-series
      ;set SPM item ticks SPN-series
    ][
      Update-hydro-data
      update-patch-data
    ]
  
  ]
end

to penobscot-go
  
  ;; update the simulation data
  if ticks mod 12 = 0 [
    update-patch-data
  ]
  
  ask patches [ 
   set cost-to-home 1e6
   set cost-to-sea 1e6
   set spm random-float 0.0004  ;; random value between 0 and 0.0004
   ;color-tidal-trapping-patches
   ;color-foraging-patches
  ]
  
ask alewives with [age = "adult"] [

  ;; ---- Temperature cue for alewife migration ----
  let local-temp [temperature] of patch-here

  ;; If environmental temp meets or exceeds the fish's migration threshold, start migrating
  if ((not start-migration?) and (local-temp >= migration-temp)) or 
   ((count alewives with [start-migration?]) / count alewives >= 0.5) [
    set start-migration? true
    set landward-migration? true
    set seaward-migration? false
  ]

  ;; --- Migration and behavior sequence ---
  if start-migration? [

    ;; Perform behavioral sequence only if not at home
    if not at-destination? [
      calculate-metabolism
      swim
      mercury-contamination
      methylmercury-contamination
      osmoregulate

      ;; Energy recovery strategy
      if energy <= 25 [ set foraging? true ]
      if energy >= 75 [ set foraging? false ]
      forage
    ]

    ;; --- Residence phase (fish is home) ---
    if at-destination? [
      if wait-days < days-at-large [
        set at-destination? true
        set completed-action? true

        set wait-ticks wait-ticks + 1
        set wait-days (wait-ticks / 288) ; 5 minute time steps
       
      ]
      ;; --- Departure phase ---
      if wait-days >= days-at-large [
        set seaward-migration? true
        set landward-migration? false
        set at-destination? false
      ]
    ]
  ]
]
    


  ask stripedbass with [age = "adult"] [
    ;school ;align, cohere, separate, separation minimum, schoolmates
    ;migrate ;time, tidal-phase, depth preference
    ;mercury-contamination ;exposure duration, exposure amount, suspended sediments


  ]
  
;  ask turtles [
;  foreach trail [
;    p -> ask p [ set pcolor yellow ]
;  ]
;]

end



