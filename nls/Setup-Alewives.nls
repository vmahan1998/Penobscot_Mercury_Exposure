to setup-alewives
  create-alewives initial-alewives [
    
    ;; --- Movement & visual setup ---
    set home-patch patch 199 346
    set migration-patch one-of patches with [patchtype = "sea"]
    
    ;; Landward Migration Start
    if migration-patch != nobody [ move-to migration-patch ]
    set landward-migration? true
    set seaward-migration? false
    set at-destination? false
    set lipid-loss? true
    set filter-feed? false
    set completed-action? false
    set start-migration? false
    
    ;; Seaward migration start
;    if home-patch != nobody [ move-to home-patch ]
;    set seaward-migration? true
;    set landward-migration? false
;    set at-destination? true
;    set lipid-loss? true
;    set filter-feed? false
;    set completed-action? true
;    set start-migration? true
    
    set acclimated-salinity [salinity] of patch-here
    set previous-patch patch-here
    
    set align-coefficient 50
    set cohere-coefficient 50
    set separate-coefficient 50
    set minimum-separation 0.3
    set color black

    ;; =====================================
    ;; --- Population Statistics (Adults) ---
    ;; =====================================

    ;; ---- Age ----
    let min-age-pop 2
    let max-age-pop 6
    let mean-age 4
    let sd-age 1.5
    set age "adult"
    set age-num truncated-normal mean-age sd-age min-age-pop max-age-pop
    
    ;; ---- Size (mm) conditional on age ----
    ;; Older alewives are longer, drawn from truncated normal distributions per age class
    let mu-length (0.26 + ((age-num - 2) * ((0.31 - 0.26) / (6 - 2))))  ;; 0.26–0.31 m across 2–6 yrs
    let sd-length 0.012
    let min-size-pop 0.200
    let max-size-pop 0.320
    set size truncated-normal mu-length sd-length min-size-pop max-size-pop
    set length-size size * 1000
    
    ;; ---- Weight (g) from Length (mm) ----
    ;; FishBase equation for Alewife (W = a * L_cm ^ b)
    let Lcm size * 100           ;; convert meters → centimeters
    let a_lw 0.00646
    let b_lw 3.06
    set weight (a_lw * (Lcm ^ b_lw))
    set original-weight weight  ;; store initial weight for later energy/weight-loss comparisons
    
    ;; =====================================
    ;; --- Habitat & physiological prefs ---
    ;; =====================================
    set optimal-temperature 17 - ((age-num - 3) * 0.4) + random-normal 0 0.3
    set optimal-velocity 0.25 + ((size - 3) * 0.05) + random-normal 0 0.03
    set optimal-depth 1.5 + ((size - 3) * 0.7) + random-normal 0 0.2
    set optimal-SPM 0.00 + ((size - 3) * 0.7) + random-normal 0 0.2
    set min-speed 0.1
    
    ;; ---- Migration Temperature Preference ----
    let min-temp 5     ;; lower migration bound
    let max-temp 10     ;; upper migration bound
    let mean-temp 8    ;; optimal migration temperature (mean)
    let sd-temp 1.5     ;; spread (wide enough for early & late migrants)
    
    set migration-temp truncated-normal mean-temp sd-temp min-temp max-temp
    ;set migration-temp 5
    
    ;; ---- Metabolic Variables ----
    set swim-efficiency 1             ;; metabolic cost/benefit to swimming       
    set digestion-efficiency 1        ;; metabolic cost/benefit to digestion
    set osmoregulation-efficiency 1   ;; metabolic cost/benefit to osmoregulation
    set lipid-catabolism-efficiency 1 ;; metabolic cost/benefit to lpid catabolism
    
    initialize-metabolism
    
    ;; ---- Days at Large in Estuary ----
    let min-days 1     ;; lower migration bound
    let max-days 7     ;; upper migration bound
    let mean-days 3.5    ;; optimal migration temperature (mean)
    let sd-days 1.5     ;; spread (wide enough for early & late migrants)
    
    set days-at-large truncated-normal mean-days sd-days min-days max-days
    
    ;; ---- Swimming Speed (m per 5 minutes) ----
    ;; Speed = 1.5–3.0 × body length per second, converted to 5-minute step
    let swim-multiplier (1.0 + random-float 0.5)
    set max-speed (size * swim-multiplier * 300) ;; speed from m/s to m / 5 minutes
    set speed max-speed / 2
    set energy 100

    ;; =====================================
    ;; --- Migration & exposure tracking ---
    ;; =====================================
    set fleeing? false
    set hg-exposure-duration 0 ; time spect exposed
    set mehg-exposure-duration 0 ; time spect exposed
    set hg-uptake-risk 0 ; instantanious risk from exposure
    set mehg-uptake-risk 0 ; instantanious risk from exposure
    set hg-exposure-total 0 ; total risk from exposure
    set mehg-exposure-total 0 ; total risk from exposure
    set hg-foraging 0 ; total risk from foraging
    set mehg-foraging 0 ; total risk from foraging
    set mehg-foraging-total 0 ; sum of foraging risk
    set hg-foraging-total 0 ; sum of foraging risk
    set mehg-total 0 ; sum of methylmercury risk
    set hg-total 0 ; sum of mercury risk
    set migration-action "spawning"

    set migration-destination "upper estuary"

    set landward-migration-time 0
    set seaward-migration-time 0
    set thermal-stress 1
    set ionregulatory-stress 5
    set chloride-density-min 10
    set chloride-density-max 100
    set chloride-cell-density 50
    set chloride-max-proliferation 0.05
    set chloride-cells-this-tick 0.0
    set acclimation-rate 0.1
    set C-mid 0.5
    set time-since-last-osmoregulation 0
    ;set E-osmo 0
    ;set E-base 0.05
    ;set E-creation 0.02
    set selective-tidal-transport? false
    set foraging? false

    set wait-days 0
    set wait-ticks 0
    
    set trail []

    ;; ---- Sex assignment ----
    ifelse random-float 1 < 0.5 [
      set sex "male"
    ] [
      set sex "female"
    ]
  ]
end


;; ---- Helper: Truncated Normal Distribution ----
to-report truncated-normal [mu sigma min-val max-val]
  let x random-normal mu sigma
  while [x < min-val or x > max-val] [
    set x random-normal mu sigma
  ]
  report x
end
